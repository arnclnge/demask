library(tidyverse)
library(ggrepel)
library(RColorBrewer)

setwd("C:/Users/arienne.calonge/OneDrive - VLIZ/Ari/DEMASK/R")

#fish scores

fish_scores = read_csv("Fish_scores_raw.csv") #%>% filter(!speciesEng=="Elasmobranchs")

#statistics
percentile_90 <- quantile(fish_scores$data_score_total, 0.9) # 90th percentile = 15
vuln_percentile_90 <- quantile(fish_scores$vuln_score, 0.9) # 90th percentile = 20
percentile_75 <- quantile(fish_scores$data_score_total, 0.75) # 75th percentile = 12
percentile_50 <- quantile(fish_scores$data_score_total, 0.5) # 50th percentile = 9
cor(fish_scores$data_score_total, fish_scores$vuln_score) # R = 0.755, positive correlation


options(ggrepel.max.overlaps = Inf)

#fish species scored with 90th percentile dashed line

ggplot(fish_scores, aes(x = data_score_total, y = vuln_score)) +
  geom_label_repel(aes(label = speciesEng, fill = factor(migratory_habitat)),
                   color = "black",
                   segment.color = "grey30", size=3.5, label.size = NA) +
  labs(x ="Data score percentile", y = "Vulnerability score percentile", fill ="Group") +
  geom_vline(xintercept = 15, linetype="dotted", color = "blue", size=1.5)+
  geom_hline(yintercept = 20, linetype="dotted", color = "blue", size=1.5)+
  theme(legend.position = "none")+theme_bw()+ 
  guides(fill = guide_legend(override.aes = aes(label = "")))+
  scale_fill_brewer(palette="Accent")+ theme(legend.text=element_text(size=10),legend.title=element_blank(),legend.position = "bottom")+
  scale_x_continuous(breaks=c(7,9,11,15), labels=c("20th", "50th", "70th", "90th"), limits = c(0,18))+
  scale_y_continuous(breaks=c(11,13.5,16.5,20), labels=c("20th", "50th", "70th", "90th"), limits = c(0,27))


ggsave("fish_scores_scatter_90th percentile.jpg", dpi=300, width=13, height=8, device="jpeg")

#grey out species with no noise impact study

fish_scores = fish_scores %>% mutate(impact_study = case_when(cont_score | impulse_score > 0 ~ "yes", TRUE ~ "no"))

ggplot(fish_scores, aes(x = data_score_total, y = vuln_score)) +
  geom_label_repel(aes(label = speciesEng, fill = factor(impact_study)),
                   color = "black",
                   segment.color = "grey30", size=4.5, label.size = NA) +
  labs(x ="Data score", y = "Vulnerability score", fill ="Species with a noise impact study") +
  geom_vline(xintercept = 15, linetype="dotted", color = "blue", size=1.5)+
  geom_hline(yintercept = 20, linetype="dotted", color = "blue", size=1.5)+
  theme(legend.position = "none")+theme_bw()+ 
  guides(fill = guide_legend(override.aes = aes(label = "")))+
  scale_fill_manual(values = c("grey", "gold"))+ theme(legend.text=element_text(size=10),legend.position = "bottom")+
  scale_x_continuous(breaks=c(7,9,11,15), labels=c("20th", "50th", "70th", "90th"), limits = c(0,18))+
  scale_y_continuous(breaks=c(11,13.5,16.5,20), labels=c("20th", "50th", "70th", "90th"), limits = c(0,27))

ggsave("fish_scores_scatter_impact study_percentile.jpg", dpi=300, width=13, height=8, device="jpeg")

#grey out species lacking information

datascore_factor <- colnames(fish_scores)[grep("_datascore", colnames(fish_scores))]

fish_scores = fish_scores %>% mutate(impact_study = case_when(cont_score >0  | impulse_score > 0 ~ "yes", TRUE ~ "no"), 
                                     incomplete_studies = case_when(rowSums(across(all_of(datascore_factor), ~ . == 0)) > 0 ~ "insufficient information", TRUE ~ "sufficient information"))

ggplot(fish_scores, aes(x = data_score_total, y = vuln_score)) +
  geom_label_repel(aes(label = speciesEng, fill = factor(incomplete_studies)),
                   color = "black",
                   segment.color = "grey30", size=4.5, label.size = NA) +
  labs(x ="Data score percentile", y = "Vulnerability score percentile", fill =" ") +
  geom_vline(xintercept = 15, linetype="dotted", color = "blue", size=1.5)+
  geom_hline(yintercept = 20, linetype="dotted", color = "blue", size=1.5)+
  theme(legend.position = "none")+theme_bw()+ 
  guides(fill = guide_legend(override.aes = aes(label = "")))+
  scale_fill_manual(values = c("grey", "green"))+ theme(legend.text=element_text(size=13),legend.position = "bottom", axis.text = element_text(size = 12))+
  scale_x_continuous(breaks=c(7,9,11,15), labels=c("20th", "50th", "70th", "90th"), limits = c(0,18))+
  scale_y_continuous(breaks=c(11,13.5,16.5,20), labels=c("20th", "50th", "70th", "90th"), limits = c(0,27))

ggsave("fish_scores_scatter_information sufficiency.jpg", dpi=300, width=15, height=7, device="jpeg")

# Expert survey vs literature - horizontal bar charts 

df = read.csv('survey_fish.csv')
df = df[order(df[,'Species'], df[,'Scoring']),]
df$ID <- seq.int(nrow(df))
#df_fish = read.csv('survey_fish.csv') %>% gather(attribute, score, Hearing.range:Threat.status, factor_key=TRUE)
#df_fish$Total.score = NULL

df %>% ggplot(aes(x = Total.score, y = reorder(interaction(Species, ID), desc(ID)), fill = Scoring)) +theme_minimal()+ geom_bar(position ="dodge", stat="identity")+
          guides(y = guide_axis_nested(delim = "&"),
            y.sec = guide_axis_manual(
              breaks = interaction(df$Species, df$ID, sep = "&")))+
          geom_text(aes(label = Total.score),show.legend = FALSE, size=5, hjust = 0, nudge_x = .1)+
          theme(axis.text.y = element_text(size = 12, hjust=1, face = "italic"),
                plot.margin = margin(rep(15, 4)))+ 
          scale_fill_manual(values = c("blue", "grey"))+
          coord_cartesian(clip = "off") + labs(y="")

ggsave("plots/fish_comparison_survey.jpeg", device= jpeg, dpi = 300, width = 10, height = 5)

# Comparison of total expert scores per species - colored horizontal bar graphs

df = read.csv('demask_survey_result.csv') 
df = df[order(df[,'Group'], df[,'Species']),]
df$ID <- seq.int(nrow(df))

df %>% group_by(Group, Species) %>% summarise(Total.score = round(mean(Total.score),1)) %>% 
  ggplot(aes(x = Total.score, y = reorder(Species, Total.score), fill = Species)) +theme_minimal()+ geom_col()+
  geom_text(aes(label = Total.score),show.legend = FALSE, size=5, hjust = 0, nudge_x = .1)+
  theme_void()+
  theme(axis.text.y = element_text(size = 14, hjust=1, face = "italic"),
        plot.margin = margin(rep(15, 4)), legend.position="none")+ 
  scale_fill_brewer(palette = "Dark2")+
  coord_cartesian(clip = "off") +
  theme_void()+
  theme(axis.text.y = element_text(size = 10, hjust=1, face = "italic"),
        plot.margin = margin(rep(15, 4)), legend.position="none")

ggsave("plots/survey_fish.jpeg", device= jpeg, dpi = 300, width = 10, height = 3)

# Principal Components Analysis - choose whih variables to do analysis on. In the report I thought it was useful to show the data score variables in relation to the species' commercial status and keystone potential

#pca data for vulnerability scores
fish_pca = fish_scores %>% select (speciesEng,hearing_score, hearingadapt_score, soundprod_score, barotrauma_score, impulse_score, cont_score, commercial_score, keystone) %>% 
                            rename("hearing sensitivity"="hearing_score", "hearing adaptation"="hearingadapt_score","sound production"="soundprod_score","barotrauma"="barotrauma_score", "impulsive noise"="impulse_score","continuous noise"="cont_score","commercial status"="commercial_score", "keystone species"="keystone")
#pca data for data scores
fish_pca = fish_scores %>% select(speciesEng,hearing_datascore, hearingadapt_datascore, soundprod_datascore,impulse_datascore, cont_datascore, commercial_score, keystone, barotrauma_score) %>% 
                            rename("hearing sensitivity data score"="hearing_datascore", "hearing adaptation data score"="hearingadapt_datascore","barotrauma"="barotrauma_score","sound production data score"="soundprod_datascore","impulsive noise data score"="impulse_datascore","continuous noise data score"="cont_datascore","commercial status"="commercial_score", "keystone species"="keystone")
library("factoextra")
fish_pca = as.data.frame(fish_pca)
rownames(fish_pca) <- fish_pca$speciesEng
  res.pca = prcomp(fish_pca[,-1]) #scale = TRUE means correlation matrix is used, but here we use the variance-covariance matrix since all scores are the same unit

fviz_pca_biplot(res.pca, repel = TRUE,
                col.var = "blue", # Variables color
                col.ind ="#696969"  # Individuals color
) + labs(title = "Principal Components Analysis (PCA) of data scores per attribute")

ggsave("fish_data_scores_PCA.jpg", dpi=300, width=12, height=6, device="jpeg")
